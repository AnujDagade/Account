/workspace/Account/app/src/main/AndroidManifest.xml:11: Warning: As of Android 12, android:exported must be set; use true to make the activity available to other apps, and false otherwise. For launcher activities, this should be set to true. [IntentFilterExportedReceiver]
        <activity android:name=".ui.MainActivity">
         ~~~~~~~~

   Explanation for issues of type "IntentFilterExportedReceiver":
   Apps targeting Android 12 and higher are required to specify an explicit
   value for android:exported when the corresponding component has an intent
   filter defined. Otherwise, installation will fail. Set it to true to make
   this activity accessible to other apps, and false to limit it to be used
   only by this app or the OS. For launch activities, this should be set to
   true; otherwise, the app will fail to launch.

   Previously, android:exported for components without any intent filters
   present used to default to false, and when intent filters were present, the
   default was true. Defaults which change value based on other values are
   confusing and lead to apps accidentally exporting components as a
   side-effect of adding intent filters. This is a security risk, and we have
   made this change to avoid introducing accidental vulnerabilities.

   While the default without intent filters remains unchanged, it is now
   required to explicitly specify a value when intent filters are present. Any
   app failing to meet this requirement will fail to install on any Android
   version after Android 11.

   We recommend setting android:exported to false (even on previous versions
   of Android prior to this requirement) unless you have a good reason to
   export a particular component.

/workspace/Account/app/src/main/java/com/example/accountapp/ui/MainActivity.java:86: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        mOutput.setText("" + mOutput.getText() + string);
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "SetTextI18n":
   When calling TextView#setText
   * Never call Number#toString() to format numbers; it will not handle
   fraction separators and locale-specific digits properly. Consider using
   String#format with proper format specifications (%d or %f) instead.
   * Do not pass a string literal (e.g. "Hello") to display text. Hardcoded
   text can not be properly translated to other languages. Consider using
   Android resource strings instead.
   * Do not build messages by concatenating text chunks. Such messages can not
   be properly translated.

   https://developer.android.com/guide/topics/resources/localization.html

/workspace/Account/app/src/main/res/layout/activity_main.xml:15: Warning: Hardcoded string "Process...", should use @string resource [HardcodedText]
        android:text="Process..."
        ~~~~~~~~~~~~~~~~~~~~~~~~~
/workspace/Account/app/src/main/res/layout/activity_main.xml:38: Warning: Hardcoded string "Output Will Appear Here...", should use @string resource [HardcodedText]
            android:hint="Output Will Appear Here..."
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

0 errors, 4 warnings
